1.final：java中的关键字，修饰符。用于声明属性，方法和类，分别表示属性不可交变，方法不可覆盖，类不可继承。
1）被声明为final的变量必须在声明时给定初值，而在以后的引用中只能读取，不可修改。 
2）被声明final的方法只能使用，不能重载。
3）如果一个类被声明为final，就意味着它不能再派生出新的子类，不能作为父类被继承。因此，一个类不能同时被声明为absrtact抽象类的和final的类。

2.static: 表示静态，它可以修饰修饰成员变量和成员方法，不能修饰类以及构造方法。
1）static修饰属性，使它成为本类的类变量，为本类对象所共有。这个属性就可以用类名.属性名来访问。被static修饰的属性，在类加载时被创建并进行初始化，只会被创建一次。
2）static修饰方法，为整个类所公有的方法，可以用类名.方法名访问。
static修饰的方法，不能直接访问本类中的非静态成员，本类的非静态方法可以访问本类的静态成员，调用静态方法。
在静态方法中不能出现this关键字。

3.abstract：修饰符，可以修饰类和方法。
1）abstract修饰的类是抽象类，不能生成对象实例，但可以做为对象变量声明的类型，需要子类继承并覆盖其中的抽象方法。
2）abstract修饰的方法是抽象方法，也就是只有声明（定义）而没有实现，实现部分以";"代替，需要子类继承实现（覆盖）。
有抽象方法的类一定是抽象类，但是抽象类中不一定都是抽象方法。
要使用抽象类中的方法，必须有一个子类继承于这个抽象类，并实现抽象类中的抽象方法，通过子类的实例去调用。









1.final：java中的关键字，修饰符。用于声明属性，方法和类，分别表示属性不可交变，方法不可覆盖，类不可继承。
被声明为final的变量必须在声明时给定初值，而在以后的引用中只能读取，不可修改。 
被声明final的方法只能使用，不能重载。
如果一个类被声明为final，就意味着它不能再派生出新的子类，不能作为父类被继承。因此，一个类不能同时被声明为absrtact抽象类的和final的类。

2.finally：java的一种异常处理机制。它是异常处理语句结构的一部分，表示总是执行，而不考虑是否出现异常。
使用 finally 可以维护对象的内部状态，并可以清理非内存资源。

3.finalize：Java中的一个方法名。它是Object类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，供垃圾收集时的其他资源回收，例如关闭文件等。


？？？？java中的main方法必须写成static的因为，在类加载时无法创建对象，因为静态方法可以不通过对象调用所以在类的main方法。所在在类加载时就可以通过main方法入口来运行程序。
3）static修饰初始代码块，这时这个初始代码块就叫做静态初始代码块，这个代码块只在类加载时被执行一次。可以用静态初始代码块初始化一个类。
动态初始代码块，写在类体中的“{}”，这个代码块是在生成对象的初始化属性是运行。这种代码块叫动态初始代码块。
类在什么时候会被加载，创建对象时会加载类，调用类中静态方法或访问静态属性也是会加载类的。在加载子类时必会先加载父类，类加载会有延迟加载原则，只有在必须加载时才会加载。